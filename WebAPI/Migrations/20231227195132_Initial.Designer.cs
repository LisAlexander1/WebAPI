// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20231227195132_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43cab4a1-2023-462b-bbb6-1548723f4a9b"),
                            Name = "Яблоко",
                            Price = 10.0
                        },
                        new
                        {
                            Id = new Guid("83051721-c684-4d33-b27b-be88891d0305"),
                            Name = "Груша",
                            Price = 5040.0
                        },
                        new
                        {
                            Id = new Guid("31f8b402-4f29-4234-a5d3-2e843e1adeed"),
                            Name = "Пистолет",
                            Price = 7214.0
                        },
                        new
                        {
                            Id = new Guid("6cccc01a-eb96-4465-a476-30f7276d6f7f"),
                            Name = "Лопасть вертолета Apache",
                            Price = 8431.0
                        },
                        new
                        {
                            Id = new Guid("310ac857-1365-4657-8b5e-cb2c620589dd"),
                            Name = "Первая ступень ракетоносителя Союз-1Б",
                            Price = 3397.0
                        },
                        new
                        {
                            Id = new Guid("02f35729-4fe4-4a15-a40c-294be3c7462c"),
                            Name = "Schützenpanzerwagen",
                            Price = 7543.0
                        },
                        new
                        {
                            Id = new Guid("e2a5a28e-1bce-4d56-990e-136163dcb6df"),
                            Name = "Транзистор",
                            Price = 5899.0
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SellDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71396019-4900-444c-a3d4-dfdbf8a0cc73"),
                            ProductId = new Guid("6cccc01a-eb96-4465-a476-30f7276d6f7f"),
                            SellDateTime = new DateTime(2020, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 70
                        },
                        new
                        {
                            Id = new Guid("05fa68e7-903f-456f-9d81-43964828fe5b"),
                            ProductId = new Guid("310ac857-1365-4657-8b5e-cb2c620589dd"),
                            SellDateTime = new DateTime(2011, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 88
                        },
                        new
                        {
                            Id = new Guid("dacfaf55-3c16-43e9-b35f-1640c75b1a4c"),
                            ProductId = new Guid("83051721-c684-4d33-b27b-be88891d0305"),
                            SellDateTime = new DateTime(2016, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 1
                        },
                        new
                        {
                            Id = new Guid("d287899c-7fe0-425b-855c-a57a858404e3"),
                            ProductId = new Guid("83051721-c684-4d33-b27b-be88891d0305"),
                            SellDateTime = new DateTime(2003, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 83
                        },
                        new
                        {
                            Id = new Guid("cf0b63da-6a34-4dff-9313-a841a9a659b4"),
                            ProductId = new Guid("02f35729-4fe4-4a15-a40c-294be3c7462c"),
                            SellDateTime = new DateTime(2014, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 6
                        },
                        new
                        {
                            Id = new Guid("9e5c7f48-c2c9-4164-9662-1438ddb8da08"),
                            ProductId = new Guid("83051721-c684-4d33-b27b-be88891d0305"),
                            SellDateTime = new DateTime(2007, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 81
                        },
                        new
                        {
                            Id = new Guid("fb3ada67-8914-4383-8013-88942a4c4da9"),
                            ProductId = new Guid("6cccc01a-eb96-4465-a476-30f7276d6f7f"),
                            SellDateTime = new DateTime(2009, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 98
                        },
                        new
                        {
                            Id = new Guid("d23fe653-0d99-4e8c-86ed-6ad346e84be5"),
                            ProductId = new Guid("83051721-c684-4d33-b27b-be88891d0305"),
                            SellDateTime = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 99
                        },
                        new
                        {
                            Id = new Guid("e1ab754b-6cf3-47b4-9d01-8e2db3007dbd"),
                            ProductId = new Guid("02f35729-4fe4-4a15-a40c-294be3c7462c"),
                            SellDateTime = new DateTime(2004, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 52
                        },
                        new
                        {
                            Id = new Guid("309eb85e-dc03-4de7-ac03-2c4962299230"),
                            ProductId = new Guid("6cccc01a-eb96-4465-a476-30f7276d6f7f"),
                            SellDateTime = new DateTime(2012, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 39
                        },
                        new
                        {
                            Id = new Guid("53aa784e-2854-4dee-917d-8ca6692f100b"),
                            ProductId = new Guid("02f35729-4fe4-4a15-a40c-294be3c7462c"),
                            SellDateTime = new DateTime(2009, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 35
                        },
                        new
                        {
                            Id = new Guid("6a037672-80f0-4869-b570-1895efafe628"),
                            ProductId = new Guid("6cccc01a-eb96-4465-a476-30f7276d6f7f"),
                            SellDateTime = new DateTime(2004, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 31
                        },
                        new
                        {
                            Id = new Guid("63255f21-b178-4ae4-bde7-33bca5bdd0e2"),
                            ProductId = new Guid("310ac857-1365-4657-8b5e-cb2c620589dd"),
                            SellDateTime = new DateTime(2013, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 61
                        },
                        new
                        {
                            Id = new Guid("3c120025-62c5-492f-a2a9-8a24e3e96683"),
                            ProductId = new Guid("310ac857-1365-4657-8b5e-cb2c620589dd"),
                            SellDateTime = new DateTime(2016, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 63
                        },
                        new
                        {
                            Id = new Guid("035ac37e-861d-426f-9beb-931687c8363b"),
                            ProductId = new Guid("e2a5a28e-1bce-4d56-990e-136163dcb6df"),
                            SellDateTime = new DateTime(2008, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 27
                        });
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b1b1769-984a-4836-9ba7-668def165b97"),
                            Login = "admin@example.com",
                            Password = "$2a$11$PbcI7pY0C9ukDXcTIgyDJupQ.xKI3Kt0/NpbWrK.vYyRiSrXjexb6"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Sale", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
