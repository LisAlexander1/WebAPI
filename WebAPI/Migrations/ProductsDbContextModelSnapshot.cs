// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    partial class ProductsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23a1a0c6-420f-43f0-b825-291c1f1cc2c4"),
                            Name = "Яблоко",
                            Price = 10.0
                        },
                        new
                        {
                            Id = new Guid("9a779d9c-2ba1-4c3a-99a2-a07a56bec562"),
                            Name = "Груша",
                            Price = 5040.0
                        },
                        new
                        {
                            Id = new Guid("59f4b265-7847-4a0e-a241-a56b2d096507"),
                            Name = "Пистолет",
                            Price = 7214.0
                        },
                        new
                        {
                            Id = new Guid("da013aea-0169-4b1c-bf75-7cbfec2953d5"),
                            Name = "Лопасть вертолета Apache",
                            Price = 8431.0
                        },
                        new
                        {
                            Id = new Guid("fdf86d11-4349-4916-ae70-c893da24ec8a"),
                            Name = "Первая ступень ракетоносителя Союз-1Б",
                            Price = 3397.0
                        },
                        new
                        {
                            Id = new Guid("9f9695ba-3cd9-4c88-9c94-00c8a98693c0"),
                            Name = "Schützenpanzerwagen",
                            Price = 7543.0
                        },
                        new
                        {
                            Id = new Guid("ccb544e5-b96c-45ae-b891-f70e31c978b4"),
                            Name = "Транзистор",
                            Price = 5899.0
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SellDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = new Guid("863f3873-bafe-453d-a15c-345688b870d0"),
                            ProductId = new Guid("fdf86d11-4349-4916-ae70-c893da24ec8a"),
                            SellDateTime = new DateTime(2021, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 83
                        },
                        new
                        {
                            Id = new Guid("569ed383-61e9-416f-a297-1ed7b3e16f91"),
                            ProductId = new Guid("ccb544e5-b96c-45ae-b891-f70e31c978b4"),
                            SellDateTime = new DateTime(2004, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 77
                        },
                        new
                        {
                            Id = new Guid("f4a45fd1-752e-489f-b018-eaae3b83e4df"),
                            ProductId = new Guid("9f9695ba-3cd9-4c88-9c94-00c8a98693c0"),
                            SellDateTime = new DateTime(2014, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 97
                        },
                        new
                        {
                            Id = new Guid("6732a0fe-a519-4ba8-a43b-7646169dfd60"),
                            ProductId = new Guid("59f4b265-7847-4a0e-a241-a56b2d096507"),
                            SellDateTime = new DateTime(2018, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 48
                        },
                        new
                        {
                            Id = new Guid("cf6445c7-1ee5-49ec-8efe-2f5650a29561"),
                            ProductId = new Guid("23a1a0c6-420f-43f0-b825-291c1f1cc2c4"),
                            SellDateTime = new DateTime(2005, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 11
                        },
                        new
                        {
                            Id = new Guid("947f8009-4d39-4350-a269-0181887af3d1"),
                            ProductId = new Guid("23a1a0c6-420f-43f0-b825-291c1f1cc2c4"),
                            SellDateTime = new DateTime(2018, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 93
                        },
                        new
                        {
                            Id = new Guid("7a7a7c19-6d00-4584-8318-d7916bf65862"),
                            ProductId = new Guid("ccb544e5-b96c-45ae-b891-f70e31c978b4"),
                            SellDateTime = new DateTime(2022, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 3
                        },
                        new
                        {
                            Id = new Guid("8d75d84f-503e-47df-a49e-d16cb86a583e"),
                            ProductId = new Guid("9f9695ba-3cd9-4c88-9c94-00c8a98693c0"),
                            SellDateTime = new DateTime(2002, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 77
                        },
                        new
                        {
                            Id = new Guid("803a2477-485a-4ad3-99dd-537229bbb578"),
                            ProductId = new Guid("9f9695ba-3cd9-4c88-9c94-00c8a98693c0"),
                            SellDateTime = new DateTime(2007, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 6
                        },
                        new
                        {
                            Id = new Guid("5dbb2b57-150c-4ddf-b7a7-49b92f84e698"),
                            ProductId = new Guid("9f9695ba-3cd9-4c88-9c94-00c8a98693c0"),
                            SellDateTime = new DateTime(2011, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 22
                        },
                        new
                        {
                            Id = new Guid("71ac6cd5-4588-4a4a-9da2-e9df71ebad17"),
                            ProductId = new Guid("59f4b265-7847-4a0e-a241-a56b2d096507"),
                            SellDateTime = new DateTime(2018, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 71
                        },
                        new
                        {
                            Id = new Guid("c00342e2-b14c-431a-b052-eea73dbf56bc"),
                            ProductId = new Guid("9f9695ba-3cd9-4c88-9c94-00c8a98693c0"),
                            SellDateTime = new DateTime(2008, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 2
                        },
                        new
                        {
                            Id = new Guid("897d38eb-98cf-4a96-9448-bfd0e1793d98"),
                            ProductId = new Guid("fdf86d11-4349-4916-ae70-c893da24ec8a"),
                            SellDateTime = new DateTime(2007, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 25
                        },
                        new
                        {
                            Id = new Guid("d5894c4d-8599-40d3-bcb1-b9b1dfd52a36"),
                            ProductId = new Guid("9a779d9c-2ba1-4c3a-99a2-a07a56bec562"),
                            SellDateTime = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 17
                        },
                        new
                        {
                            Id = new Guid("f9cabe17-d305-47fa-a1db-09fb56eb4c92"),
                            ProductId = new Guid("ccb544e5-b96c-45ae-b891-f70e31c978b4"),
                            SellDateTime = new DateTime(2014, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellsCount = 78
                        });
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1489d39-9258-42ad-a772-e04d904ac88c"),
                            Login = "admin@example.com",
                            Password = "$2a$11$0LRl7J.9XF8Ss0Op5j2Ece7dOpNl.QsHw85GnuLuMWCqmjxdhHRIi"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Sale", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
